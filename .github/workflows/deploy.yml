name: Bootstrap and Deploy to Jetson

on:
  push:
    branches:
      - main

jobs:
  bootstrap-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository (optional, mainly for GitHub Actions workflow)
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up SSH to Jetson
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.JETSON_SSH_KEY }}

      # Step 3: Bootstrap Jetson - install prerequisites & ROS2
      - name: Bootstrap Jetson
        run: |
          ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -o ServerAliveCountMax=5 ${{ secrets.JETSON_USER }}@${{ secrets.JETSON_HOST }} << 'EOF'
            set -e  # Exit on error
            echo "üöÄ Starting bootstrap..."

            # Set non-interactive mode to prevent prompts
            export DEBIAN_FRONTEND=noninteractive

            # Update package list
            echo "üì¶ Updating package list..."
            sudo apt update -y

            # Install basic dependencies (skip upgrade to save time)
            echo "üì¶ Installing basic dependencies..."
            sudo apt install -y python3-pip git wget lsb-release curl gnupg2 software-properties-common

            # Install ROS2 Humble if not installed
            if [ ! -f /opt/ros/humble/setup.bash ]; then
              echo "ü§ñ Installing ROS2 Humble..."
              
              # Add ROS2 repository using modern method (not apt-key)
              sudo mkdir -p /etc/apt/keyrings
              sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc -o /etc/apt/keyrings/ros-archive-keyring.gpg
              echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null
              
              sudo apt update -y
              
              # Install ROS2 base + required message packages
              echo "‚è≥ Installing ROS2 (this may take 10-15 minutes)..."
              sudo apt install -y ros-humble-ros-base ros-humble-geometry-msgs ros-humble-sensor-msgs ros-humble-std-msgs
              
              echo "‚úÖ ROS2 Humble installed!"
            else
              echo "‚úÖ ROS2 Humble already installed, skipping..."
            fi

            # Install Python build tools
            echo "üêç Installing Python build tools..."
            pip3 install --user --upgrade pip setuptools wheel

            echo "‚úÖ Bootstrap complete!"
          EOF

      # Step 4: Deploy repository and build ROS2 workspace
      - name: Deploy to Jetson
        run: |
          ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -o ServerAliveCountMax=5 ${{ secrets.JETSON_USER }}@${{ secrets.JETSON_HOST }} << 'EOF'
            set -e  # Exit on error
            echo "üöÄ Starting deployment..."

            # Install colcon if not present
            if ! command -v colcon &> /dev/null; then
              echo "üì¶ Installing colcon..."
              pip3 install --user colcon-common-extensions
            fi

            # Clone or update repository via HTTPS (public repo)
            if [ ! -d ~/Artemis6 ]; then
              echo "üì• Cloning repository..."
              git clone https://github.com/coleaskey32/Artemis6.git ~/Artemis6
            else
              echo "üîÑ Updating repository..."
              cd ~/Artemis6
              git reset --hard
              git pull origin main
            fi

            # Navigate to workspace
            cd ~/Artemis6

            # Clean build artifacts to avoid CMake cache conflicts
            echo "üßπ Cleaning old build artifacts..."
            rm -rf build install log

            # Ensure src folder exists (ROS2 workspace structure)
            mkdir -p src

            # Source ROS2 environment
            if [ -f /opt/ros/humble/setup.bash ]; then
              echo "ü§ñ Sourcing ROS2 Humble..."
              source /opt/ros/humble/setup.bash
            else
              echo "‚ö†Ô∏è  ROS2 Humble not found, continuing anyway..."
            fi

            # Install Python dependencies
            echo "üì¶ Installing Python dependencies..."
            pip3 install --user -r requirements.txt || echo "‚ö†Ô∏è  Some dependencies failed to install"

            # Build ROS2 workspace
            echo "üî® Building ROS2 workspace..."
            # Add ~/.local/bin to PATH for colcon
            export PATH="$HOME/.local/bin:$PATH"
            colcon build

            echo "‚úÖ Deployment complete!"
          EOF